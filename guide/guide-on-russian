Работа со строками и словами:
print (word.upcase()) - Выводит все слова в переменной в верхнем регистре
print (word.downcase()) - Выводит все слова в переменной в нижнем регитсре
print (word.strip()) - Удаляет все пробелы в слове
print (word.length()) - Считает сколько символов в строке
print (word.include? "Слово или символ для поиска") - Осущетсвляет поиск по строке задонного в кавычках параметра (выводит либо false либо true)
word - Переменная
----------------------------------------------------------------------------------------------------------------------------------------------------------------
Математические вычесления:
+ - (Сложение двух компонентов)
- - (Вычитание двух компонентов)
* - (Умножение двух компонентов)
/ - (Деление двух компонентов)
^ - (Возвидение в степень двух компонентов)
% - (Делние с остатком двух компонентов)
----------------------------------------------------------------------------------------------------------------------------------------------------------------
Перевод типов данных:
print(number.to_s + "Это число") - Приведение числа в строку (компонент "to_" выступает в роли назначителя. После него идет название типа данных для конверции)
(Принимает значения "to_s" - Перевод в строку, to_i - перевод в целое число, to_f - перевод числа в число с плавующей точкой)
number - Переменная
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Работа с числами по модулям:
print(num.abs()) - Первод числа  из отрицательного в целое (-4: Применяем модуль "abs" = 4)
print(num.round()) - Округление числа (14.56 - 15)
print(num.chomp()) - Выводит значение со всеми "\,|,*,|,\n,\r"
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Получение данных от пользователя и обработка их:
gets - Команда, привведении которой программа булет ждать введения данных от пользователя (name = gets)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Массивы и ассоциативные массивы:
Array - Ключевое слово для создания массива (arr = Array [4, 6, 8, 12, true, "Привет", 5.67])
! В массив можно поместить разные типы данных одновременно !
В массиве данные записываются через запятую и в квадратных скобках ([])
! Массив выводится с помощью коианд: "print" и "puts" !
! В солучае если нужно вывести определённый елемент, то исполььзуется ИНДЕКС. Нумерация начинается с нуля (0 - "Боб", 1 - "Алекс" 2 - "Дима")
Для вывода определнной записи в массиве пишут так: print(arr[0]) - "Боб"
Так же, для указания последнего, предпоследнего елемента массива используют: print(arr[-1]) последний. print(arr[-2]) - предпоследний.
Чтобы вывести елементы массива по очереди до опредлённого нужно: print(arr[1, 2]) - выведится: "Алекс, Дима"
---------Изменение данных в массиве:------------------------------------------------------------------------------------------------------------------------------
arr[0] = Диана (Значение "Боб" в массиве заменится на значение "Диана") (arr - массив со значениями: "Боб", "Алекс", "Дима")
! Для создания пустого массива используется команда: Array.new (new_arr = Array.new) (new_arr - переменная с пустым массивом) !
Для добавления данных в пустой массив, используйте первую комнду в разделе: "Изменение данных в массиве" (вместо arr, вводите имя вашей переменной с пустым массивом)
! В случае если вы хотите заполнять данными пустой массив не попорядку используйте команду:  arr[7] = Максим (В итоге, в консоле будет 6 пропусков, а на сельмом месте будет значение "	Максим")
--------------Методы для массивов:-----------------------------------------------------------------------------------------------------------------------------------
puts(arr.length()) - Выводит колличество елементов в массиве
puts(arr.reverse()) - Переворачивает значения массива
puts(arr.include? "Слово для поиска") - Ищёт елемент введённый в кавычки (В случае если поиск на число, вводить число без кавычек!!!)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Методы:
def -  Эта команда создает метод либо же по другому "Участок кода" который можно использовать потом при написании кода (def SayHello) (SayHello - Имя метода)
end - Команда закрывающая метод
(Для вывода метода в код, достаточно просто написать имя метода с учитыванием регистра)
return - функция позволяющая записать метод в переменную
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Условные операторы:
if - Оператор проверяющий какую либо переменную
(name = "Aleks"
if name != "Aleks"
 puts("Вы не Алекс!")
else
 puts("Вы Алекс!")
end
)
! Оператор if закрывается с помощью команды end !
Знаки оператора:
< - Больше
> - Меньше
>= -Больше или равно
=< - Меньше или равно
== - Равно
!= - Не равно
Компоненты:
or - или (if num == num_2 or num_3 == num_4)
and - и (if num == num_2 and num_3)
! Командой elsif можно добавить ещё одно условие !
case - Более удобный оператор
when - условие при котором выполняется какой либо код
(case day
 when "1"
  puts("Понедельник")
 when "2"
  puts("Вторник")
и.т.д.
)
-----------------------------------------------------------------------------------------------------------------------------------------------
Циклы:
while - Выполняет код несколько раз 
(i = 0
while i <= 5
puts i
i +=
)
for - Перебор елементов
(for name 0..5
 puts name
end)(Для доп. справки: https://www.youtube.com/watch?v=7cvmdo20ajg&list=PL0lO_mIqDDFXr9_TtbefdNPKgYba_-XgL&index=8)
